'scopeName': 'source.yaml'
'name': 'PyRestTest'
'fileTypes': ['yaml']
'patterns': [
  { 'include': '#comment' }
  { 'include': '#yaml' }
]
'repository':
  'comment':
    'match': '^(\\s*)#.*$'
    'name': 'comment.line.number-sign.pyresttest'
  'constant':
    'match': '\\b(?:true|false|null)\\b'
    'name': 'constant.language.pyresttest'
  'number':
    'comment': 'handles integer and decimal numbers'
    'match': '-?(?=[1-9]|0(?!\\d))\\d+(\\.\\d+)?([eE][+-]?\\d+)?'
    'name': 'constant.numeric.pyresttest'
  'escape_char':
    'match': '\\\\\\S'
    'name': 'constant.character.escape.pyresttest'
  'single_quoted_string':
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pyresttest'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pyresttest'
    'name': 'string.quoted.simple'
    'patterns': [
      { 'include': '#escape_char' }
      { 'include': '#variable' }
      { 'include': '#url' }
      { 'include': '#object' }
    ]
  'double_quoted_string':
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pyresttest'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pyresttest'
    'name': 'string.quoted.simple'
    'patterns': [
      { 'include': '#escape_char' }
      { 'include': '#variable' }
      { 'include': '#url' }
      { 'include': '#object' }
    ]
  'variable':
    'patterns': [
      {
        'match': '(\\$)[a-zA-Z_][a-zA-Z0-9_]*'
        'captures':
          '1':
            'name': 'punctuation.definition.variable.pyresttest'
        'name': 'variable.other.normal.pyresttest'
      }
    ]
  'pyresttest_constant':
    'match': 'template|jmespath|jsonpath_mini|comparator|expected|schema|file'
    'name': 'constant.language.pyresttest'
  'object':
    'begin':'\\{'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.dictionary.begin.pyresttest'
    'end':'\\}'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.dictionary.end.pyresttest'
    'name': 'meta.structure.dictionary.pyresttest'
    'patterns': [
       {
        'comment': 'the JSON object key'
        'include': '#key'
      }
      {
        'begin': ':'
        'beginCaptures':
          '0':
            'name': 'punctuation.separator.dictionary.key-value.pyresttest'
        'end': '(,)|(?=\\})'
        'endCaptures':
          '1':
            'name': 'punctuation.separator.dictionary.pair.pyresttest'
        'name': 'meta.structure.dictionary.value.pyresttest'
        'patterns': [
          {
            'comment': 'the JSON object value'
            'include': '#value'
          }
        ]
      }
    ]
  'yaml':
    'begin': '^(?:\\s*)(?:(-)\\s*)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.entry.yaml'
    'end': '$'
    'patterns': [
      {
        'comment': 'the YAML tag'
        'include': '#yaml_tag'
      }
      {
        'begin': ':'
        'beginCaptures':
          '0':
            'name': 'punctuation.separator.yaml.tag-value.pyresttest'
        'end': '(?=$)'
        'name': 'meta.structure.yaml.value.pyresttest'
        'patterns': [
          {
            'comment': 'the YAML value'
            'include': '#yaml_value'
          }
        ]
      }
    ]
  'key':
    'patterns': [
      { 'include': '#pyresttest_constant' }
      { 'include': '#single_quoted_string' }
      { 'include': '#double_quoted_string' }
      {
        'match': '\\w+'
        'name': 'entity.name.type.dictionary.key.pyresttest'
      }
    ]
  'yaml_tag':
    'patterns': [
      {
        'match': '\\w+'
        'name': 'entity.name.tag.pyresttest'
      }
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.pyresttest'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.pyresttest'
        'name': 'entity.name.tag.pyresttest'
        'patterns': [
          { 'include': '#escape_char' }
        ]
      }
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.pyresttest'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.pyresttest'
        'name': 'entity.name.tag.pyresttest'
        'patterns': [
          { 'include': '#escape_char' }
        ]
      }
    ]
  'yaml_value':
    'patterns': [
      { 'include': '#single_quoted_string' }
      { 'include': '#double_quoted_string' }
      { 'include': '#url' }
      { 'include': '#object' }
    ]
  'value':
    'patterns': [
      { 'include': '#constant' }
      { 'include': '#number' }
      { 'include': '#url' }
      { 'include': '#single_quoted_string' }
      { 'include': '#double_quoted_string' }
      { 'include': '#variable' }
      { 'include': '#array' }
      { 'include': '#object' }
    ]
  'array':
    'begin': '\\['
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.array.begin.pyresttest'
    'end': '\\]'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.array.end.pyresttest'
    'name': 'meta.structure.array.json'
    'patterns': [
      { 'include': '#value' }
      {
        'match': ','
        'name': 'punctuation.separator.array.pyresttest'
      }
      {
        'match': '[^\\s\\]]'
        'name': 'invalid.illegal.expected-array-separator.pyresttest'
      }
    ]
  'url_parameter_key':
    'match': '(?:\\?|&)(\\w+)(?=\\=)'
    'captures':
      '1':
        'name': 'url.parameter.key.pyresttest'
  'url':
    'match': '(?:(?:https?:\\/)|(?:\\.+))?(\\/[\\w\\.\\-\\?=\\$\\&]*)+'
    'name': 'markup.link.pyresttest'
    'captures':
      '1':
        'patterns': [
          { 'include': '#url_parameter_key' }
          { 'include': '#variable'}
        ]
